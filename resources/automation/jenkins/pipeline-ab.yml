apiVersion: v1
kind: BuildConfig
metadata:
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "ab-pipeline",  "kind": "DeploymentConfig"}]'
  labels:
    name: ab-pipeline
    template: ab-pipeline
  name: ab-pipeline
spec:
  nodeSelector: null
  output: {}
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    type: None
  strategy:
    jenkinsPipelineStrategy:
      env:
        - name: "threescaleurl"
          value: "https://ah-3scale-ansible-admin.app.rhdp.ocp.cloud.lab.eng.bos.redhat.com"
        - name: "uatnamespace"
          value: ""
        - name: "image_url_base"
          value: "docker.io/rht/gptetraining"
        - name: "ocp_resource_definition"
          value: "https://github.com/gpe-mw-training/3scale_onpremise_implementation_labs/blob/master/resources/automation/jenkins/vertx-greeting.yml"
        - name: "app_name_stable"
          value: "vertx-greeting-1-0"
        - name: "app_tag_stable"
          value: "1.0"
        - name: "app_name_new"
          value: "vertx-greeting-1-1"
          description: "You'll want to use a new version of the vertx service.  A new version is already provided to you that exposes an additional RESTful resource called:  link:https://github.com/gpe-mw-training/3scale_onpremise_implementation_labs/blob/new_vertx_api/services/vertx_greeting_service/src/main/java/io/vertx/blog/App.java#L35-L39[goodbye]"
        - name: "app_tag_new"
          value: "1.1"
      jenkinsfile: |-
        node('maven') {
            env.apiaccesstoken = "f1d375df8e318086499fe8b8a06827d75e5a4592d25fc3088f2fd7d86b035e46";    
            env.appplanid = "2357355891901";
            env.metricsid = "2555417998898";
            env.ablimit = 25;

            env.uatnamespace = "bservices";
            env.prodnamespace = "bservices-prod";

            env.route_name = "vertxgreetingroute"
  
            stage('createLatestGreetingResourceInUAT') {
                echo "createGreetingResourceInUAT()"
                oc process -f ${env.ocp_resource_definition} -p APP_NAME=${env.app_name_new} -p "IMAGE_URL=${env.image_url_base}/vertx-greeting:${env.app_tag_new}" | oc create -n ${env.uatnamespace} -f -
            }

            stage('StartLatestServiceInUAT') {

                print 'startLatestServiceInUAT() Start ${env.app_tag_new} version of ${env.app_name_stable} in ${env.uatnamespace} with one pod running' 
                openshiftScale 
                        depCfg: "${env.app_name_new}", 
                        namespace: "${env.prodnamespace}", 
                        replicaCount: "1", 
                        verifyReplicaCount: "true", 
                        verbose: "true"
            }

            stage('executeIntegrationTestsInUAT') {
                echo "conductIntegrationTestsInUAT() "
            }
  
            stage('createLatestGreetingResourceInProd') {
                echo "createGreetingResourceInUAT()"
                oc process -f ${env.ocp_resource_definition} -p APP_NAME=${env.app_name_new} -p "IMAGE_URL=${env.image_url_base}/vertx-greeting:${env.app_tag_new}" | oc create -n ${env.prodnamespace} -f -
            }
  
            stage('StartLatestServiceInProd') {

                print 'startLatestService() Start ${env.app_tag_new} version of ${env.app_name_stable} in ${env.prodnamespace} with one pod running' 
                openshiftScale 
                        depCfg: "${env.app_name_new}", 
                        namespace: "${env.prodnamespace}", 
                        replicaCount: "1", 
                        verifyReplicaCount: "true", 
                        verbose: "true"
            }
  
            stage('UpdateRouteToAB') { 
                print 'UpdateRouteToAB() delete production route' 
                openshiftDeleteResourceByKey 
                        keys: "${env.route_name}", 
                        namespace: "${env.prodnamespace}", 
                        types: "route", 
                        verbose: "true"
    
                print 'UpdateRouteToAB() create new route with a-b weights to both stable and new version of service' 
                openshiftCreateResource 
                        jsonyaml: "
                            {
                                "apiVersion": "v1",
                                "kind": "Route",
                                "metadata": {
                                   "labels": {
                                      "project": "${env.prodnamespace}"
                                   },
                                   "name": "${env.route_name}",
                                   "namespace": "${env.prodnamespace}"
                                },
                                "spec": {
                                   "host": "${env.route_name}-${env.prodnamespace}.${env.OCP_WILDCARD_DOMAIN}",
                                   "alternateBackends": [
                                      {
                                         "kind": "Service",
                                         "name": "${env.app_name_new}",
                                         "weight": 30
                                      }
                                   ],
                                   "to": {
                                      "kind": "Service",
                                      "name": "${env.app_name_stable}",
                                      "weight": 70
                                   },
                                   "wildcardPolicy": "None"
                                }
                            }
                                ",
                        namespace: "${env.prodnamespace}", 
                        verbose: "false"
            }
  
            stage('GetCurrentLimitId') { 
                print 'Get Current Limit Id'
                env.LIMIT_ID = "broken";
                echo env.LIMIT_ID
            }
  
            stage('UpdateLimitToAB') { 
                print 'Update 3scale Limit back to AB Testing mode'  
                sh  "echo Updating Id ${env.LIMIT_ID} to less request ${env.ablimit} per min because of AB Testing"
                sh  "curl -s -o /dev/null -w \"%{http_code}\\n\" -X PUT  \"${env.threescaleurl}/admin/api/application_plans/${env.appplanid}/metrics/${env.metricsid}/limits/${env.LIMIT_ID}.xml\" -d \'access_token=${env.apiaccesstoken}&amp;period=minute&amp;value=${env.ablimit}\'"  
            }
        }
    type: JenkinsPipeline
  triggers:
  - github:
      secret: secret101
    type: GitHub
  - generic:
      secret: secret101
    type: Generic

